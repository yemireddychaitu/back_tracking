#include <stdio.h>
int valid(int k[100][100],int r1,int c1,int n)
{
    if((r1>=1)&&(r1<=n)&&(c1>=1)&&(c1<=n)&&(k[r1][c1]==0))
    {
         return 1;
    }
    return 0;
}
int knight(int k[100][100],int r,int c,int visited,int n,int row[10],int col[10])
{
    int i,j,r1,c1;
    if(visited==64)
    {
    	    return 1;
    }
        for(i=0;i<8;i++)
        {
            r1=r+row[i];
            c1=c+col[i];
            if(valid(k,r1,c1,n)==1)
            {
                visited++;
                k[r1][c1]=visited;
                if(knight(k,r1,c1,visited,n,row,col))
                {
                    return 1;
                }
                visited--;
                k[r1][c1]=0;
            }
        }
    return 0;
}

int main(void) {
	// your code goes here
	int n,i,j;
	int row[] ={2,1,-1,-2,-2,-1,1,2};
	int col[] ={1,2,2,1,-1,-2,-2,-1};
	scanf("%d",&n);
	int k[100][100];
	for(i=1;i<=n;i++)
	{
	    for(j=1;j<=n;j++)
	    {
	       k[i][j]=0; 
	    }
	}
	k[1][1]=1;
	if(knight(k,1,1,1,n,row,col));
	{
	  for(i=1;i<=n;i++)
    	    {
        	    for(j=1;j<=n;j++)
        	    {
        	       printf("%d ",k[i][j]); 
        	    }
        	    printf("\n");
    	    }
	}
	elseprintf("no solution");
	return 0;
}

